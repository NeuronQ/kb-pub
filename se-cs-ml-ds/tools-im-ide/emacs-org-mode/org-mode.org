#+TITLE: Doc Title
#+STARTUP: showall
#+STARTUP: latexpreview

* Moving
** H2H any level
C-c C-p/n
** H2H same level
C-c C-b/f
** 2Parent
C-c C-u
** Via search without affecting current folding
C-c C-j -> ...move and type in sparse tree mode... -> <Enter> to get
to new location.

* Searching
C-c / ...and you'll see a list of options, most useful being:
- t searches TODO items
- m searches for tagged headings with expressions like +tag1+tagA-tag2
- r regexp search

C-c C-c clears search highlight.

* Visibility/folding
** Cycle folding of current H (or list item)
<Tab>
** Cycle folding of entire doc
#+NAME: target1
S-<Tab>
** Zoom in on subtree
C-x n s
** Zoom back out
C-x n w
** Different folding/zooms in different windows
M-x clone-indirect-buffer

* Structure Editing
** +/- current H-level (no effect on children)
M-<Left>/<Right>
** +/- subtree H-level
M-S-<Left>/<Right>
** Move subtree Up/Down
M-<Up>/<Down>
M-S-<Up>/<Down>
** Move ("refile") subtree to other portion of doc
C-c C-w

* Links
...drop *the space before last ]* to make them work.
** Basics
*** No label
[[http://www.google.com] ] eg. [[http://www.google.com]]
*** Labeled
[[goagle][http://www.google.com] ] eg. [[http://www.google.com][goagle]]
*** Follow
C-c C-o ...or CLICK
*** Edit
C-c C-l ...or backspace after

** Types
*** Web [[http://news.ycombinator.com]]
*** Local file (relative) [[file:bash.sh]]
*** Local file (absolute) [[file:/home/neuronq/Dropbox/kb/cheatsheets/bash.sh]]
*** Heading in doc (by name) [[Moving]]
*** Named target in doc [[target1]]

* Emacs spellcheck
Read [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Spelling.html][more online]].
** Enable auto-checking
M-x flyspell-mode
** Show corrections for current word
M-$
** Check document (or selection)
M-x ispell
** Change dictionary
M-x ispell-change-dictionary
** Check code doc (comments and strings only)
M-x flyspell-mode

* Lists
- type them using one bullet from:
  1. "*" or "+" or "-"
  2. "<number>)" or "<number>."
- M-[S]-<Left>/<Right> :: to change indent for item or subtree
- C-c - :: to change bullet type (S-<Left>/<Right> also works)

* Checkboxes
- [ ] just type them
- [ ] M-S-<Enter> to insert a new one
- [-] C-c C-c to toggle checked/unckecled
  - [X] usual M-[S]-<Left>/<Right> to change indent/nesting
  - [ ] now parent checked status depends on children
- [0/1] type [0/2 ] to use n/total style for parent status
  + [ ] and they will update automatically on child changes
  + [66%] and [% ] for percent style
    * [X] or can be triggered to update manually by C-c C-c on them
    * [X] and nesting updates correctly
    * [ ] even across multiple types
  + progress markers can be at the end too btw [1/1]
    + [X] but not checkboxes :(
      
* "To do" items
** DONE Inserting
- Just write TODO at start of a heading like above
- Or C-c C-t ("toggle todo state") on any heading or its children 
** To cycle between done states
- C-c C-t on heading or children or
- S-<Left>/<Right> on heading
** TODO [#B] Importance/priority levels
- Type them as [#A/B/C] or S-<Up>/<Down>
** TODO And progress can be combined [50%]
- [X] also usable at both start and end of line
- [ ] so there is a nice integration Lists <-> Headings <-> Checkboxes here
** Custom states besides/instead just TODO/DONE
Use this somewhere in your document (preferably at the top!):
#+TODO: TODO(t) WIP(w) | DONE(d) CANCELED(c)
...and *remeber to C-c C-c on it to apply!*
*** WIP And now can be teststed
Note that the | (vertical bar) needs to separate "done" from "not
done" states, othewrwise progress indicators can't work.

* Tags :like:this_one:@nd:
** Inheritance :alpha:
Tags of a parent H are considered to also be of the child Hs even if
they are not explicitly set.
** Setting tags 							:@nd:
- just type them between colons, at end of line
- C-c C-q (or C-c C-c with curson in H) and after starting to type you
  can press <Space> or <Tab> for completion or displaying variants
** Searching tagged headlines
C-c \ or C-c / m (C-u prefix to ignore non-TODO headlines)

* Tables
| ID | Name   |         Phone |
|----+--------+---------------|
|    | <6>    |               |
|  2 | Jane   |       +123425 |
|  1 | Allie with a really long named | +330234534252 |
|    |        |               |
** Creating
*** By typing and triggering
Start typing colums separated by | like this:
|Col1 |   Col2|Col3
...then either:
- <Tab> or <Enter> to trigger a table and go to next line, or
- C-c <Enter> to trigger a proper table with separated header
*TIP:* Also type the final | so that <Enter> does not trigger
 auto-alignment and you can go to next line to type a |- before <Tab>
 to start with a table that has a separated header.
*** With a predefinite size
C-c | then enter a size like 3x2 (includes a header)
*** From CSV, TSV or even space separated words
Select the text to convert to a table, then C-c |

** Maintaining shape
- C-c C-c realign table without moving
- <Tab> realign table and move to cell to the right

** Moving inside
<Tab> move to right cell
S-<Tab> move to left cell

<Enter> move to next row

M-a begining of field
M-e end of field

** Editing
*NOTE:* One can always edit text as usual then realign.
C-c <Space> clear current field
C-c insert a horizontal separator (typing |- on new line then also <Tab> works)
 
** Manipulating
M-<Left>/<Right> move a column
M-<Up>/<Down> move a row

M-S-<Down> insert row above
M-S-<Up> delete row
M-S-<Right> insert col to left
M-S-<Left> delete col

** Sorting
C-c ^ will sort by current column (will prompt about ordering type),
but only the current table region, between separators, so trying to
sort on table header cells will have no effect.

** Max colum width
<...number..> (Eg. <10>) at top of a colomn sets is maximum
width, and any content over this will be hidden and cell postfixed
with =>.

C-c ` (backtrick, not ' !) opens full text in a new buffer where it
can be edited and editing ends with C-c C-c.

** Alignment
By default it tries to guess and align numbers to the right and
strings to the left.

<r> or <l> set explicitly one type of alignment or the other. They can
be combined with max widths like <r10>. There is a <c> for center but
it only has an effect on HTML export.

** Formulas
[[https://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html]]

* Source code
#+BEGIN_SRC javascript
  function foo() {
      x = 42;
  }
#+END_SRC
** Insertion
   <s <Tab>
** Editing in separate buffer
C-c ' (and another C-c ' to finish or C-c C-k to abort).

* Time tracking
- only works for headings (not checkboxes)
- start clock (clock in) :: C-c-x-i (while on heading)
- stop clock (clock out) :: C-c-x-o
- cancel started clock :: C-c-x-q
- recalculate manually edited clock interval :: C-c-c

* LaTeX formulas
** To turn auto-rendering formulas on/off
# +STARTUP: latexpreview
# +STARTUP: nolatexpreview
** To togge source/rendered a LaTeX formula run C-c-x-l
** To render formulas in all
- doc: C-u-u-c-x-l
- subtree: C-u-c-x-l
** Example
Line formula like $ax^2 + bx + c = 0$.

If $a^2=b$ and \( b=2 \), then the solution must be
either $$ a=+\sqrt{2} $$ or \[ b=-\sqrt{2} \].

Block formula: $s^{3}$ .

\begin{equation}
x=\sqrt{\color{red}{b}}
\end{equation}

me
** To edit a rendered formula run C-c-c

* Images
Use [[file:my-file.png] ].

Toggle display images with: C-c-x-v

Add ~(setq org-startup-with-inline-images t)~ to init file to
auto-display inline images.

Also: #+STARTUP: showimages


* Properties and Column mode

- add property :: C-c-x p
- remove property :: C-c-c d (inside :PROPERTIES:)
- enter column mode :: C-c-x-c
- exit column mode :: q (on a task)
- edit value in column mode :: e
- show colun value in minibuffer :: v
- cycle throguh allowed column values :: S-left/right

See:
- https://orgmode.org/guide/Properties.html
- https://orgmode.org/worg/org-tutorials/org-column-view-tutorial.html
- https://orgmode.org/manual/Column-attributes.html

#+COLUMNS: %ITEM %EST{est+} %Analysis{est+} %Dev{est+} %Design{est+} %QA{est+}

** Milestone 1

*** Task 1

**** Sub-task 1.1
     :PROPERTIES:
     :EST:      3-4
     :END:

**** Sub-task 1.2
     :PROPERTIES:
     :EST:      3-4
     :END:

***** Sub-sub-task X
      :PROPERTIES:
      :EST:      3-4
      :Analysis: 1
      :Design:   1-20
      :QA:       1
      :END:

***** Sub-sub-task Y

**** Sub-task 1.3
     :PROPERTIES:
     :EST:      10
     :END:

***** Sub-sub-task 0

***** Sub-sub-task 1

*** Task 2
    :PROPERTIES:
    :EST:      3.5
    :END:

*** Task 3

**** Sub-task 3.1


* Diagrams

#+BEGIN_SRC dot :file org-mode-graph.png
  digraph {
  // graph from left to right
  rankdir=LR;
  splines=true;
  node [shape=box];

  id [label="Install Graphviz"]
  conf [label="Configure org-babel"]
  dot [label="DOT in org-mode"]

  id -> conf
  conf -> dot
  dot -> "Profit"
  dot -> "Success?" [style=dotted]
  }
#+END_SRC

#+RESULTS:
[[file:org-mode-graph.png]]

#+BEGIN_SRC plantuml :file org-mode-uml.png
  @startuml
  class Car

  Driver - Car : drives >
  Car *- Wheel : have 2 >
  Car -- Person : < owns
  @enduml
#+END_SRC

#+RESULTS:
[[file:org-mode-uml.png]]

#+BEGIN_SRC plantuml :file org-mode-gant.png
@startgantt
[Prototype design] lasts 15 days
[Test prototype] lasts 10 days
[Test prototype] starts at [Prototype design]'s end
@endgantt
#+END_SRC

#+RESULTS:
[[file:org-mode-gant.png]]
